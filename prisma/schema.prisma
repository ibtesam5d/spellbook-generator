generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @unique
  username   String      @unique
  role       Role        @default(USER)
  session    Session[]
  Key        Key[]
  spellbooks Spellbook[]

  @@map("user")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary         Boolean
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model Spell {
  id                Int         @id @unique @default(autoincrement())
  level             Int
  spell_name        String      @unique
  list              String[]
  components        String[]
  spell_description String
  description_list  String[]
  description_more  String?
  duration          String
  range             String
  school            String
  source            String
  subdescription    String?
  time              String
  spellbooks        Spellbook[]

  @@map("spell")
}

model Spellbook {
  id                    String   @id @unique
  user_id               String
  spellbook_name        String   @unique
  character_name        String
  spellbook_description String?
  class                 String[]
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  user                  User     @relation(references: [id], fields: [user_id])
  spells                Spell[]

  @@index([user_id])
  @@map("spellbook")
}

enum Role {
  USER
  ADMIN
}
